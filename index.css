:root {
  --primary-color: #612674;
  --default-gap: 1rem;
}
html {
  font-family: sans-serif;
}
h1,
h2,
h3,
h4 {
  font-family: "Oxygen", sans-serif;
}
.maxwidth {
  max-width: 70.25em;
  /* aq eu falei q a largura maxima do meu header e 70.25, criei uma class dps de outra class só pra isso */
  margin: auto;
}
.main-header {
  text-align: center;
}
.main-nav {
  background-color: var(--primary-color);
}
.main-nav ul {
  list-style-type: none;
  padding: 0;
  /* sempre q for tirar os botao e zerar o padding tem q ser na ul */
  margin-bottom: 0;
}
.main-nav a {
  color: white;
  text-decoration: none;
  display: block;
  padding: 1em;
  /* quando for começar a edição pelo mobile colocar o display block, pq por natural e elemento de line e um padding, e tem q ser pelo a pra ter a area clicavel no todo */
}
.main-nav a:hover {
  background-color: color-mix(in srgb, var(--primary-color), white 10%);
  /* o hover tem q ser no a pra a area clicavel ser tudo */
}
/* md(medium) */
@media screen and (min-width: 48.75em) {
  .main-header {
    display: flex;
    justify-content: space-between;
  }
  .main-nav {
    background-color: initial;
  }
  .main-nav li {
    display: inline-block;
  }
  .main-nav a {
    color: var(--primary-color);
  }
  .main-nav a:hover {
    background-color: color-mix(in srgb, var(--primary-color), white 90%);
  }
  .logo {
    margin-left: 1.5em;
  }
}
.hero-banner {
  text-align: center;
  background-color: #5a48486e;
  padding: 1em;
}
.herobanner_icon {
  height: 5em;
  width: 5em;
  display: none;
}
.hero-title {
  color: var(--primary-color);
  padding: 0.5em 0 0.5em;
  font-size: 1.5em;
  margin: 1.3em 0;
}
.hero-subtitle {
  color: color-mix(in srgb, var(--primary-color), white 30%);
  margin: 0 0 1.3em;
  font-size: 1em;
  line-height: 1.5;
}
.hero-banner_btn {
  color: white;
  text-decoration: none;
  background-color: rgba(0, 255, 255, 0.534);
  padding: 1em 2.2em;
  border-radius: 5px;
  display: inline-block;
}
/* md(medium) */
@media screen and (min-width: 48.75em) {
  .hero-banner {
    background-color: var(--primary-color);
  }
  .hero-title,
  .hero-subtitle {
    color: white;
  }
  .herobanner_icon {
    margin: auto;
    display: inline-block;
  }
}
/* lg(large) */
@media screen and (min-width: 56.25em) {
  .hero-banner {
    background-image: url(ProjetoAngelsHosters-inicio/images/bg_topo_1198x670.jpg);
    background-blend-mode: luminosity;
    /* usei esse aspect ratio pq pega um elemento html e aumenta ou diminui numa mesma proporção, aumenta proporcionalmente uma div por ex, nesse caso peguei o hero banner e pedi pra ele aumentar ou diminuir proporcionalmente */
    aspect-ratio: 1198 / 670;
    display: flex;
    /* se eu tivesse apenas o display flex o meu hero banner ia ta de acordo enqto eu amplio a tela, porem eu falei q no meu maxwidth o width é de 75% logo precisei falar q a margin voltaria ao normal, e falei pra ter um justify center e um aling no final, mas se eu n tivesse mexido no width teria dado certo somente com o display flex */
    justify-content: center;
    align-items: flex-end;
  }
  .hero-banner .maxwidth {
    width: 75%;
    /* eu utilizei esse width pro conteudo nao ficar ate no final pq estava com 100%, ai eu diminui pra 75% pra n ficar mt colado nas laterais */
    margin: initial;
    margin-bottom: 4em;
  }
}
/* xl(extra large) */
@media screen and (min-width: 74em) {
  .hero-banner {
    background-image: linear-gradient(transparent, var(--primary-color)),
      url(ProjetoAngelsHosters-inicio/images/bg_topo_1600x1374.jpg);
    background-blend-mode: luminosity;
    background-position: center top;
    background-repeat: no-repeat;
    /* eu utilizei o max height e coloquei 80vh ou seja 80% da viewport, entao qnd chegasse em 80% da vh ele ia parar de ampliar a imagem, mas ia ficar sobrando um espaço em branco, ai eu utilizei o widht de 100% pra tampar tudo */
    max-height: 80vh;
    width: 100%;
  }
  .herobanner_icon {
    height: 7em;
    width: 7em;
  }
  .hero-banner .maxwidth {
    width: 50%;
    /* só estou diminuindo o conteudo q tem ao aumentar a tela por isso criei a a div com a class maxwidth */
  }
}
.middle-content a {
  color: inherit;
  text-decoration: none;
}
.middle-content {
  background-color: #f6f6f6;
  text-align: center;
  padding: 2em;
}
.middle-content_title {
  color: var(--primary-color);
  text-transform: uppercase;
  font-size: 1.25em;
}
.bi {
  color: var(--primary-color);
  font-size: 3.5em;
}
p {
  line-height: 1.6;
}
.row {
  display: flex;
  /* coloquei o display flex pra todos ficar numa linha, mas usei o wrap pra quebrar a linha e voltar ao normal */
  flex-wrap: wrap;
  gap: var(--default-gap);
}
.col {
  flex: 1 0 auto;
  /* se eu n usasse esse flex grow 1 ele n ia ocupar a tela toda qnd eu ampliasse ela  e ia dar uma diferença no lado direito dos cards, logo precisei usar o grow 1 e nao deu essa diferança*/
  /* vai sempre crescer qnd tivcer espaço sobrando, n qro q ele diminua, e o auto o width vai depender do width do proprio elemento */
  width: 100%;
  /* to falando q todos q tiver a classe col vai ter width de 100 */
}
.col-sm-12 {
  width: 100%;
  /* estou falando q pro mobile q vai ocupar 12 colunas ele vai ter um width de 100% */
}
@media screen and (min-width: 48.75em) {
  .col-md-6 {
    width: calc(50% - 1rem);
    /* se eu só usasse o width de 50% ia dar certo, mas ia ficar grudado e só ia desgrudar se eu ampliasse, logo usei o gap entre os elementos mas eu preciso fzr a conta ent vou usar o calc de 50% menos o gap entre os elementos, logo resolveu meu problema */
  }
}
@media screen and (min-width: 74em) {
  .col-xl-3 {
    width: calc(25% - var(--default-gap));
    /* aq como é 3 colunas pra 4 25% vai usar ai so colocar na calc 25 menos o gap e ja era */
  }
  .col-xl-6 {
    width: calc(50% - var(--default-gap));
  }
}
.main-content {
  padding: 2em;
  container-type: inline-size;
}

.main-content p {
  line-height: 1.2;
}
.main-content_title {
  text-transform: uppercase;
  color: var(--primary-color);
  letter-spacing: 0.2em;
  font-weight: normal;
  font-size: 1.25em;
}
.main-content_article {
  margin-bottom: 3em;
}
.main-content_img img {
  width: 100%;
}
@container (min-width: 37.5em) {
  .main-content_article {
    display: flex;
    /* ao usar o display flex eu alinhei os itens dentro do article tanto a img e o conteudo mas eu tive q designar q o main-content fosse meu pai e falei q o container type era inline size, o gap é só pra distanciar a img do conteudo */
    gap: 1.4em;
  }
}
